/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled 2"
  https://create.arduino.cc/cloud/things/334e49fc-e94b-42b6-b449-8a512e9ca250 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  String lightSensor;
  bool sunlight;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
#include <WiFiNINA.h>
WiFiClient client;

char ssid[] = SECRET_SSID;
char pass[] = SECRET_PASSWORD;
#include "thingProperties.h"
#include <BH1750FVI.h>

BH1750FVI LightSensor(BH1750FVI::k_DevModeContLowRes);

char   HOST_NAME[] = "maker.ifttt.com";
String PATH_NAME   = "/trigger/event-name/with/key/your-key"; // change your EVENT-NAME and YOUR-KEY
String queryString = "?value1=57&value2=25";

void setup() {
  
  WiFi.begin(ssid, pass);
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  while (!Serial);

  // connect to web server on port 80:
 if (client.connect(HOST_NAME, 80)) {
    // if connected:
    Serial.println("Connected to server");
  }
  else {// if not connected:
    Serial.println("connection failed");
  }
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  if (Serial.read() == 's') {

    // make a HTTP request:
    // send HTTP header
    client.println("GET " + PATH_NAME + queryString + " HTTP/1.1");
    client.println("Host: " + String(HOST_NAME));
    client.println("Connection: close");
    client.println(); // end HTTP header
    
    while (client.connected())
    {
    if (client.available())
    {
    
    while (client.connected()) {
      if (client.available()) {
        // read an incoming byte from the server and print it to serial monitor:
        char c = client.read();
        Serial.print(c);
      }
    }
    client.stop();
    Serial.println();
    Serial.println("disconnected");
    }
  ArduinoCloud.update();
  // Your code here
  
  float value = LightSensor.GetLightIntensity();
  
  if(value > 1000 )
  {
    lightSensor = "Sunlight Detected";
  }
  else
  {
    lightSensor = "No Sunlight";
    
  }
  Serial.println(value);
  delay(1000);
  
   }
}
}




void onSunlightChange()  {
  // Add your code here to act upon Sunlight change
}
